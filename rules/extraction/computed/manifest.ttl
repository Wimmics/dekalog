@prefix mf: <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#> .
@prefix sd: <http://www.w3.org/ns/sparql-service-description#> .
@prefix kgi: <http://ns.inria.fr/kg/index#> .
@prefix earl: <http://www.w3.org/ns/earl#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<> a mf:Manifest ;
    mf:entries  (
            <graphList.ttl>
            <vocabularyList.ttl>
            <tripleCount.ttl>
            <classCount.ttl>
            <propertyCount.ttl>
            <languages.ttl>
            <timezone.ttl>
            <datatypes.ttl>
            <resourceHostname.ttl>
        ) .

<languages.ttl> a mf:ManifestEntry ;
    kgi:onSuccess (
        [
            mf:action """PREFIX schema: <http://schema.org/>
                PREFIX prov: <http://www.w3.org/ns/prov#>
                CONSTRUCT {
                    ?datasetDescription prov:wasGeneratedBy <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/languages.ttl#activity> .
                    <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/languages.ttl#activity> prov:used <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/languages.ttl> ;
                        prov:wasAssociatedWith <https://orcid.org/0000-0002-9814-439X> .
                    ?datasetDescription schema:availableLanguage ?lang .
                }
                WHERE {
                    {
                        SELECT DISTINCT (lang(?o) as ?lang)  WHERE {
                            ?s ?p ?o
                            FILTER( isLiteral(?o) )
                            FILTER( ?lang != "" )
                        }
                    }
                    BIND(Iri(CONCAT("http://ns.inria.fr/kg/index#", MD5(str($rawEndpointUrl)), "Dataset")) AS ?datasetDescription)
                }
            """
        ]
        <../../meta/modifiedUpdate.ttl>
    ) .

<datatypes.ttl> a mf:ManifestEntry ;
kgi:onSuccess (
    [
        mf:action """PREFIX schema: <http://schema.org/>
            PREFIX prov: <http://www.w3.org/ns/prov#>
            PREFIX kgi: <http://ns.inria.fr/kg/index#>
            CONSTRUCT {
                ?datasetDescription prov:wasGeneratedBy <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/datatypes.ttl#activity> .
                <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/languages.ttl#activity> prov:used <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/datatypes.ttl> ;
                    prov:wasAssociatedWith <https://orcid.org/0000-0002-9814-439X> .
                ?datasetDescription kgi:availableLiteralDatatypes ?datatype .
            }
            WHERE {
                {
                    SELECT DISTINCT (datatype(?o) as ?datatype) {
                        ?s ?p ?o
                        FILTER( isLiteral(?o) )
                    }
                }
                FILTER( ?datatype != "" )
                BIND(Iri(CONCAT("http://ns.inria.fr/kg/index#", MD5(str($rawEndpointUrl)), "Dataset")) AS ?datasetDescription)
            }
        """
    ]
    <../../meta/modifiedUpdate.ttl>
) .

<graphList.ttl> a mf:ManifestEntry ;
    kgi:onSuccess (
        [
            kgi:timeout "PT120S"^^xsd:duration ;
            mf:action """PREFIX void: <http://rdfs.org/ns/void#>
            PREFIX dcat: <http://www.w3.org/ns/dcat#>
            PREFIX prov: <http://www.w3.org/ns/prov#>
            PREFIX sd: <http://www.w3.org/ns/sparql-service-description#>
            PREFIX earl: <http://www.w3.org/ns/earl#>
            PREFIX kgi: <http://ns.inria.fr/kg/index#>
            CONSTRUCT {
                ?datasetDescription prov:wasGeneratedBy <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/graphList.ttl#activity> .
                <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/graphList.ttl#activity> prov:used <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/graphList.ttl> ;
                        prov:wasAssociatedWith <https://orcid.org/0000-0002-9814-439X> .
                ?metadataDescription a prov:Entity , earl:TestSubject ;
                    prov:wasDerivedFrom ?endpointUrl ;
                    kgi:curated ?endpointDescription .
                ?endpointDescription sd:availableGraphs ?graphList .
                ?graphList sd:namedGraph [
                        a sd:NamedGraph ;
                        sd:name ?graph
                    ] .
            }
            WHERE {
                {
                    SELECT DISTINCT ?graph WHERE {
                        GRAPH ?graph { ?s ?p ?o }
                    }
                }
                BIND(Iri(CONCAT("http://ns.inria.fr/kg/index#", MD5(str($rawEndpointUrl)), "Dataset")) AS ?datasetDescription)
                BIND(Iri(CONCAT("http://ns.inria.fr/kg/index#", MD5(str($rawEndpointUrl)), "Endpoint")) AS ?endpointDescription)
                BIND(Iri(CONCAT("http://ns.inria.fr/kg/index#", MD5(str($rawEndpointUrl)), "Metadata")) AS ?metadataDescription)
                BIND(Iri(CONCAT("http://ns.inria.fr/kg/index#", MD5(str($rawEndpointUrl)), "Graphs")) AS ?graphList)
            }
            """
        ]
        <../../meta/modifiedUpdate.ttl>
    ) ;
    kgi:onFailure (
        <graphListCorese.ttl>
    ) .

<graphListCorese.ttl> a mf:ManifestEntry ;
    kgi:onSuccess (
        [
            kgi:timeout "PT120S"^^xsd:duration ;
            kgi:endpoint kgi:federation ;
            mf:action """PREFIX kgi: <http://ns.inria.fr/kg/index#>
            PREFIX void: <http://rdfs.org/ns/void#>
            PREFIX prov: <http://www.w3.org/ns/prov#>
            PREFIX sd: <http://www.w3.org/ns/sparql-service-description#>
            CONSTRUCT {
                ?datasetDescription prov:wasGeneratedBy <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/graphListCorese.ttl#activity> .
                <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/graphListCorese.ttl#activity> prov:used <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/graphListCorese.ttl> ;
                    prov:wasAssociatedWith <https://orcid.org/0000-0002-9814-439X> .
                ?endpointDescription sd:availableGraphs ?graphList .
                ?graphList sd:namedGraph [
                        a sd:NamedGraph ;
                        sd:name ?graph
                    ] .
            }
            WHERE {
                {
                    SELECT DISTINCT ?graph WHERE {
                        SERVICE $endpointUrl {
                            GRAPH ?graph { ?s ?p ?o . }
                        }
                        FILTER(STRSTARTS(str(?graph), $namespace))
                    }
                }
                BIND(Iri(CONCAT("http://ns.inria.fr/kg/index#", MD5(str($rawEndpointUrl)), "Dataset")) AS ?datasetDescription)
                BIND(Iri(CONCAT("http://ns.inria.fr/kg/index#", MD5(str($rawEndpointUrl)), "Endpoint")) AS ?endpointDescription)
                BIND(Iri(CONCAT("http://ns.inria.fr/kg/index#", MD5(str($rawEndpointUrl)), "Graphs")) AS ?graphList)
            }"""
        ]
        <../../meta/modifiedUpdate.ttl>
    ) .

<vocabularyList.ttl> a mf:ManifestEntry ;
    kgi:onSuccess (
        [
            kgi:timeout "PT120S"^^xsd:duration ;
            mf:action """PREFIX void: <http://rdfs.org/ns/void#>
                PREFIX prov: <http://www.w3.org/ns/prov#>
                PREFIX earl: <http://www.w3.org/ns/earl#>
                PREFIX kgi: <http://ns.inria.fr/kg/index#>
                CONSTRUCT {
                    ?datasetDescription prov:wasGeneratedBy <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/vocabularyList.ttl#activity> .
                    <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/vocabularyList.ttl#activity> prov:used <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/vocabularyList.ttl> ;
                        prov:wasAssociatedWith <https://orcid.org/0000-0002-9814-439X> .
                    ?metadataDescription a prov:Entity , earl:TestSubject ;
                        prov:wasDerivedFrom $rawEndpointUrl ;
                        kgi:curated ?datasetDescription .
                    ?datasetDescription void:vocabulary ?ns .
            }
            WHERE {
                {
                    SELECT DISTINCT ?elem {
                    ?s ?elem ?o .
                    }
                }
                BIND(IRI(REPLACE( str(?elem), "(#|/)[^#/]*$", "$1")) AS ?ns) .
                BIND(Iri(CONCAT("http://ns.inria.fr/kg/index#", MD5(str($rawEndpointUrl)), "Metadata")) AS ?metadataDescription)
                BIND(Iri(CONCAT("http://ns.inria.fr/kg/index#", MD5(str($rawEndpointUrl)), "Dataset")) AS ?datasetDescription)
            }
        """
        ]
        [
            kgi:timeout "PT120S"^^xsd:duration ;
            mf:action """PREFIX void: <http://rdfs.org/ns/void#>
                PREFIX prov: <http://www.w3.org/ns/prov#>
                PREFIX earl: <http://www.w3.org/ns/earl#>
                PREFIX dcterms: <http://purl.org/dc/terms/>
                PREFIX kgi: <http://ns.inria.fr/kg/index#>
                CONSTRUCT {
                    ?datasetDescription prov:wasGeneratedBy <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/vocabularyList.ttl#activity> .
                    <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/vocabularyList.ttl#activity> prov:used <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/vocabularyList.ttl> ;
                        prov:wasAssociatedWith <https://orcid.org/0000-0002-9814-439X> .
                    ?metadataDescription a prov:Entity , earl:TestSubject ;
                        prov:wasDerivedFrom $rawEndpointUrl ;
                        kgi:curated ?datasetDescription .
                    ?datasetDescription void:vocabulary ?ns .
            }
            WHERE {
                {
                    SELECT DISTINCT ?elem {
                        ?s a ?elem .
                    }
                }
                BIND(IRI(REPLACE( str(?elem), "(#|/)[^#/]*$", "$1")) AS ?ns) .
                BIND(Iri(CONCAT("http://ns.inria.fr/kg/index#", MD5(str($rawEndpointUrl)), "Metadata")) AS ?metadataDescription)
                BIND(Iri(CONCAT("http://ns.inria.fr/kg/index#", MD5(str($rawEndpointUrl)), "Dataset")) AS ?datasetDescription)
            }
            """
        ]
        <vocabularyListCoreseLOV.ttl>
        <../../meta/modifiedUpdate.ttl>
    ) ;
    kgi:onFailure (
        <vocabularyListCorese.ttl>
    ) .

<vocabularyListCorese.ttl> a mf:ManifestEntry ;
    kgi:onSuccess (
        [
            kgi:endpoint kgi:federation ;
            mf:action """PREFIX void: <http://rdfs.org/ns/void#>
                PREFIX prov: <http://www.w3.org/ns/prov#>
                PREFIX earl: <http://www.w3.org/ns/earl#>
                PREFIX kgi: <http://ns.inria.fr/kg/index#>
                CONSTRUCT {
                    ?datasetDescription prov:wasGeneratedBy <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/vocabularyList.ttl#activity> .
                    <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/vocabularyList.ttl#activity> prov:used <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/vocabularyList.ttl> ;
                        prov:wasAssociatedWith <https://orcid.org/0000-0002-9814-439X> .
                    ?metadataDescription a prov:Entity , earl:TestSubject ;
                        prov:wasDerivedFrom $rawEndpointUrl ;
                        kgi:curated ?datasetDescription .
                    ?datasetDescription void:vocabulary ?ns .
            }
            WHERE {
                SERVICE $endpointUrl {
                    SELECT DISTINCT ?elem WHERE {
                        ?s a ?elem .
                    }
                }
                BIND(IRI(REPLACE( str(?elem), "(#|/)[^#/]*$", "$1")) AS ?ns) .
                BIND(Iri(CONCAT("http://ns.inria.fr/kg/index#", MD5(str($rawEndpointUrl)), "Metadata")) AS ?metadataDescription)
                BIND(Iri(CONCAT("http://ns.inria.fr/kg/index#", MD5(str($rawEndpointUrl)), "Dataset")) AS ?datasetDescription)
            }
            """
        ]
        [
            kgi:endpoint kgi:federation ;
            mf:action """PREFIX void: <http://rdfs.org/ns/void#>
                PREFIX prov: <http://www.w3.org/ns/prov#>
                PREFIX earl: <http://www.w3.org/ns/earl#>
                PREFIX kgi: <http://ns.inria.fr/kg/index#>
                CONSTRUCT {
                    ?datasetDescription prov:wasGeneratedBy <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/vocabularyList.ttl#activity> .
                    <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/vocabularyList.ttl#activity> prov:used <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/vocabularyList.ttl> ;
                        prov:wasAssociatedWith <https://orcid.org/0000-0002-9814-439X> .
                    ?metadataDescription a prov:Entity , earl:TestSubject ;
                        prov:wasDerivedFrom $rawEndpointUrl ;
                        kgi:curated ?datasetDescription .
                    ?datasetDescription void:vocabulary ?ns .
                }
                WHERE {
                    SERVICE $endpointUrl {
                        SELECT DISTINCT ?elem WHERE {
                            ?s ?elem ?o .
                        }
                    }
                    BIND(IRI(REPLACE( str(?elem), "(#|/)[^#/]*$", "$1")) AS ?ns) .
                    BIND(Iri(CONCAT("http://ns.inria.fr/kg/index#", MD5(str($rawEndpointUrl)), "Metadata")) AS ?metadataDescription)
                    BIND(Iri(CONCAT("http://ns.inria.fr/kg/index#", MD5(str($rawEndpointUrl)), "Dataset")) AS ?datasetDescription)
                }"""
        ]
        <../../meta/modifiedUpdate.ttl>
        <vocabularyListCoreseLOV.ttl>
    ) .

<vocabularyListCoreseLOV.ttl> a mf:ManifestEntry ;
        kgi:onSuccess (
            [
                kgi:timeout "PT120S"^^xsd:duration ;
                kgi:endpoint kgi:federation ;
                mf:action """PREFIX void: <http://rdfs.org/ns/void#>
                    PREFIX prov: <http://www.w3.org/ns/prov#>
                    PREFIX earl: <http://www.w3.org/ns/earl#>
                    PREFIX kgi: <http://ns.inria.fr/kgindex#>
                    PREFIX vann: <http://purl.org/vocab/vann/>
                    PREFIX voaf: <http://purl.org/vocommons/voaf#>
                    PREFIX dcterms: <http://purl.org/dc/terms/>
                    CONSTRUCT {
                        ?datasetDescription prov:wasGeneratedBy <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/vocabularyListCoreseLOV.ttl#activity> .
                            prov:used <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/vocabularyListCoreseLOV.ttl> ;
                            prov:wasAssociatedWith <https://orcid.org/0000-0002-9814-439X>  .
                        ?metadataDescription a prov:Entity , earl:TestSubject ;
                            prov:wasDerivedFrom $rawEndpointUrl ;
                            kgi:curated ?datasetDescription .
                        ?datasetDescription void:vocabulary ?vocabURI .
                        ?vocabURI a voaf:Vocabulary ;
                            vann:preferredNamespaceUri ?uri ;
                            vann:preferredNamespacePrefix ?prefix ;
                            dcterms:title ?title .
                    }
                    WHERE {
                        SERVICE $endpointUrl {
                            SELECT DISTINCT ?elem WHERE {
                                ?s a ?elem .
                            }
                        }
                        BIND( IRI(REPLACE( str(?elem), "(#|/)[^#/]*$", "$1" )) AS ?vocabURI ) .
                        SERVICE <https://lov.linkeddata.es/dataset/lov/sparql> {
                            GRAPH <https://lov.linkeddata.es/dataset/lov>{
                                ?vocabURI a voaf:Vocabulary ;
                                    vann:preferredNamespaceUri ?uri ;
                                    vann:preferredNamespacePrefix ?prefix ;
                                    dcterms:title ?title .
                            }
                        }
                        BIND(Iri(CONCAT("http://ns.inria.fr/kg/index#", MD5(str($rawEndpointUrl)), "Metadata")) AS ?metadataDescription)
                        BIND(Iri(CONCAT("http://ns.inria.fr/kg/index#", MD5(str($rawEndpointUrl)), "Dataset")) AS ?datasetDescription)
                    }
                """
            ]
            [
                kgi:timeout "PT120S"^^xsd:duration ;
                kgi:endpoint kgi:federation ;
                mf:action """PREFIX void: <http://rdfs.org/ns/void#>
                    PREFIX prov: <http://www.w3.org/ns/prov#>
                    PREFIX earl: <http://www.w3.org/ns/earl#>
                    PREFIX kgi: <http://ns.inria.fr/kgindex#>
                    PREFIX dcterms: <http://purl.org/dc/terms/>
                    CONSTRUCT {
                        ?datasetDescription prov:wasGeneratedBy <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/vocabularyListCoreseLOV.ttl#activity> .
                            prov:used <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/vocabularyListCoreseLOV.ttl> ;
                            prov:wasAssociatedWith <https://orcid.org/0000-0002-9814-439X>  .
                        ?metadataDescription a prov:Entity , earl:TestSubject ;
                            prov:wasDerivedFrom $rawEndpointUrl ;
                            kgi:curated ?datasetDescription .
                        ?datasetDescription void:vocabulary ?vocabURI .
                        ?vocabURI a voaf:Vocabulary ;
                            vann:preferredNamespaceUri ?uri ;
                            vann:preferredNamespacePrefix ?prefix ;
                            dcterms:title ?title .
                    }
                    WHERE {
                        SERVICE $endpointUrl {
                            SELECT DISTINCT ?elem WHERE {
                                ?s ?elem ?o .
                            }
                        }
                        BIND( IRI(REPLACE( str(?elem), "(#|/)[^#/]*$", "$1" )) AS ?vocabURI ) .
                        SERVICE <https://lov.linkeddata.es/dataset/lov/sparql> {
                            GRAPH <https://lov.linkeddata.es/dataset/lov>{
                                ?vocabURI a voaf:Vocabulary ;
                                    vann:preferredNamespaceUri ?uri ;
                                    vann:preferredNamespacePrefix ?prefix ;
                                    dcterms:title ?title .
                            }
                        }
                        BIND(Iri(CONCAT("http://ns.inria.fr/kg/index#", MD5(str($rawEndpointUrl)), "Metadata")) AS ?metadataDescription)
                        BIND(Iri(CONCAT("http://ns.inria.fr/kg/index#", MD5(str($rawEndpointUrl)), "Dataset")) AS ?datasetDescription)
                    }
                """
            ]
            <../../meta/modifiedUpdate.ttl>
        ) .


<classCount.ttl> a mf:ManifestEntry ;
    kgi:onFailure (
        [
            mf:action """PREFIX void: <http://rdfs.org/ns/void#>
                DELETE {
                    ?datasetDescription void:classes ?classCount .
                } WHERE {
                    BIND(Iri(CONCAT("http://ns.inria.fr/kg/index#", MD5(str($rawEndpointUrl)), "Dataset")) AS ?datasetDescription)
                }
            """
        ]
        [
            kgi:timeout "PT120S"^^xsd:duration ;
            mf:action """PREFIX void: <http://rdfs.org/ns/void#>
                PREFIX dcat: <http://www.w3.org/ns/dcat#>
                PREFIX prov: <http://www.w3.org/ns/prov#>
                PREFIX sd: <http://www.w3.org/ns/sparql-service-description#>
                PREFIX earl: <http://www.w3.org/ns/earl#>
                PREFIX kgi: <http://ns.inria.fr/kg/index#>
                PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
                PREFIX owl: <http://www.w3.org/2002/07/owl#>
                CONSTRUCT {
                    ?datasetDescription prov:wasGeneratedBy <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/classCount.ttl#activity> .
                    <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/classCount.ttl#activity> prov:used <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/classCount.ttl> ;
                            prov:wasAssociatedWith <https://orcid.org/0000-0002-9814-439X> .
                    ?datasetDescription void:classes ?count .
                }
                WHERE {
                    {
                        SELECT (count(?class) AS ?count) {
                            SELECT DISTINCT ?class
                            $FROM
                            WHERE {
                                { ?class a owl:Class }
                                UNION { ?class a rdfs:Class }
                                UNION { ?whatever a ?class }
                            }
                        }
                    }
                    BIND(Iri(CONCAT("http://ns.inria.fr/kg/index#", MD5(str($rawEndpointUrl)), "Dataset")) AS ?datasetDescription)
                }
            """
        ]
        <../../meta/modifiedUpdate.ttl>
    ) .

<propertyCount.ttl> a mf:ManifestEntry ;
    kgi:onFailure (
        [
            mf:action """PREFIX void: <http://rdfs.org/ns/void#>
                DELETE {
                    ?datasetDescription void:properties ?propCount .
                } WHERE {
                    BIND(Iri(CONCAT("http://ns.inria.fr/kg/index#", MD5(str($rawEndpointUrl)), "Dataset")) AS ?datasetDescription)
                }
            """
        ]
        [
            kgi:timeout "PT120S"^^xsd:duration ;
            mf:action """PREFIX void: <http://rdfs.org/ns/void#>
                PREFIX dcat: <http://www.w3.org/ns/dcat#>
                PREFIX prov: <http://www.w3.org/ns/prov#>
                PREFIX sd: <http://www.w3.org/ns/sparql-service-description#>
                PREFIX earl: <http://www.w3.org/ns/earl#>
                PREFIX kgi: <http://ns.inria.fr/kg/index#>
                PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
                PREFIX owl: <http://www.w3.org/2002/07/owl#>
                CONSTRUCT {
                    ?datasetDescription prov:wasGeneratedBy <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/propertyCount.ttl#activity> .
                    <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/propertyCount.ttl#activity> prov:used <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/propertyCount.ttl> ;
                            prov:wasAssociatedWith <https://orcid.org/0000-0002-9814-439X> .
                    ?datasetDescription void:properties ?count .
                }
                WHERE {
                    {
                        SELECT (count(?p) AS ?count) {
                            SELECT DISTINCT ?p
                            $FROM
                            WHERE {
                                ?s ?p ?o
                            }
                        }
                    }
                    BIND(Iri(CONCAT("http://ns.inria.fr/kg/index#", MD5(str($rawEndpointUrl)), "Dataset")) AS ?datasetDescription)
                }
            """
        ]
        <../../meta/modifiedUpdate.ttl>
    ) .

<tripleCount.ttl> a mf:ManifestEntry ;
    kgi:onFailure (
        [
            mf:action """PREFIX void: <http://rdfs.org/ns/void#>
                DELETE {
                    ?datasetDescription void:triples ?propCount .
                } WHERE {
                    BIND(Iri(CONCAT("http://ns.inria.fr/kg/index#", MD5(str($rawEndpointUrl)), "Dataset")) AS ?datasetDescription)
                }
            """
        ]
        [
            kgi:timeout "PT120S"^^xsd:duration ;
            mf:action """PREFIX void: <http://rdfs.org/ns/void#>
                PREFIX dcat: <http://www.w3.org/ns/dcat#>
                PREFIX prov: <http://www.w3.org/ns/prov#>
                PREFIX sd: <http://www.w3.org/ns/sparql-service-description#>
                PREFIX earl: <http://www.w3.org/ns/earl#>
                PREFIX kgi: <http://ns.inria.fr/kg/index#>
                CONSTRUCT {
                    ?datasetDescription prov:wasGeneratedBy <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/tripleCount.ttl#activity> .
                    <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/tripleCount.ttl#activity> prov:used <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/tripleCount.ttl> ;
                        prov:wasAssociatedWith <https://orcid.org/0000-0002-9814-439X> .
                    ?datasetDescription void:triples ?count .
                }
                WHERE {
                    {
                        SELECT (count(*) AS ?count) {
                            SELECT DISTINCT ?s ?p ?o
                            $FROM
                            WHERE {
                               ?s ?p ?o .
                            }
                        }
                    }
                    BIND(Iri(CONCAT("http://ns.inria.fr/kg/index#", MD5(str($rawEndpointUrl)), "Dataset")) AS ?datasetDescription)
                }
            """
        ]
        <../../meta/modifiedUpdate.ttl>
    ) .

<timezone.ttl> a mf:ManifestEntry ;
    kgi:onSuccess (
        [
            mf:action """PREFIX schema: <https://schema.org/>
                PREFIX prov: <http://www.w3.org/ns/prov#>
                CONSTRUCT {
                    ?endpointDescription prov:wasGeneratedBy <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/timezone.ttl#activity> .
                    <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/timezone.ttl#activity> prov:used <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/timezone.ttl> ;
                        prov:wasAssociatedWith <https://orcid.org/0000-0002-9814-439X> .
                    ?endpointDescription schema:broadcastTimezone ?timezone .
                } WHERE {
                    BIND(TZ(NOW()) AS ?timezone)
                    FILTER(?timezone != "")
                    BIND(Iri(CONCAT("http://ns.inria.fr/kg/index#", MD5(str($rawEndpointUrl)), "Endpoint")) AS ?endpointDescription)
                }"""
        ]
        <../../meta/modifiedUpdate.ttl>
    ) .

<resourceHostname.ttl> a mf:ManifestEntry ;
    kgi:onSuccess (
        [
            kgi:timeout "PT120S"^^xsd:duration ;
            mf:action """PREFIX void: <http://rdfs.org/ns/void#>
                PREFIX prov: <http://www.w3.org/ns/prov#>
                PREFIX earl: <http://www.w3.org/ns/earl#>
                PREFIX kgi: <http://ns.inria.fr/kg/index#>
                CONSTRUCT {
                    ?datasetDescription prov:wasGeneratedBy <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/resourceNamespaces.ttl#activity> .
                    <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/vocabularyList.ttl#activity> prov:used <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/resourceNamespaces.ttl> ;
                        prov:wasAssociatedWith <https://orcid.org/0000-0002-9814-439X> .
                    ?datasetDescription kgi:resourceHostname ?ns .
            }
            WHERE {
                {
                    SELECT DISTINCT (IRI(REPLACE(str(?elem), ?urlEnd, "", "q" ) ) AS ?ns)  {
                        ?elem ?p ?o .
                        FILTER(isIri(?elem)).
                        BIND( REPLACE(str(?elem), "^[a-z][a-z0-9+.]*://([a-z0-9._~%!$&'()*+,;=]+@)?([a-z0-9-._~%]+|[a-f0-9:.]+|[[a-f0-9][a-z0-9-._~%!$&'()*+,;=:]+])(:[0-9]+)?", "") AS ?urlEnd)
                    }
                }
                BIND(Iri(CONCAT("http://ns.inria.fr/kg/index#", MD5(str($rawEndpointUrl)), "Dataset")) AS ?datasetDescription)
            }
        """
        ]
        [
            kgi:timeout "PT120S"^^xsd:duration ;
            mf:action """PREFIX void: <http://rdfs.org/ns/void#>
                PREFIX prov: <http://www.w3.org/ns/prov#>
                PREFIX earl: <http://www.w3.org/ns/earl#>
                PREFIX kgi: <http://ns.inria.fr/kg/index#>
                CONSTRUCT {
                    ?datasetDescription prov:wasGeneratedBy <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/resourceNamespaces.ttl#activity> .
                    <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/vocabularyList.ttl#activity> prov:used <https://raw.githubusercontent.com/Wimmics/dekalog/master/rules/extraction/computed/resourceNamespaces.ttl> ;
                        prov:wasAssociatedWith <https://orcid.org/0000-0002-9814-439X> .
                    ?datasetDescription kgi:resourceHostname ?ns .
            }
            WHERE {
                {
                    SELECT DISTINCT (IRI(REPLACE(str(?elem), ?urlEnd, "", "q" ) ) AS ?ns)  {
                        ?s ?p ?elem .
                        FILTER(! STRSTARTS(?p, "http://www.w3.org/1999/02/22-rdf-syntax-ns#"))
                        FILTER(isIri(?elem)).
                        BIND( REPLACE(str(?elem), "^[a-z][a-z0-9+.]*://([a-z0-9._~%!$&'()*+,;=]+@)?([a-z0-9-._~%]+|[a-f0-9:.]+|[[a-f0-9][a-z0-9-._~%!$&'()*+,;=:]+])(:[0-9]+)?", "") AS ?urlEnd)
                    }
                }
                BIND(Iri(CONCAT("http://ns.inria.fr/kg/index#", MD5(str($rawEndpointUrl)), "Dataset")) AS ?datasetDescription)
            }
        """
        ]
        <../../meta/modifiedUpdate.ttl>
    ) .

# Miscanellous statistics from SPORTAL using a vocabulary created for SPORTAL only
#    mf:action """PREFIX voidex: <http://ldf.fi/void-ext#>
#        CONSTRUCT { $datasetDescription void:propertyPartition [ void:property ?p ; s:subjectTypes [ s:subjectClass ?sType ; s:distinctMembers ?x ] ] } WHERE { SELECT (COUNT(?s) AS ?x) ?p ?sType WHERE { ?s ?p ?o ; a ?sType . } GROUP BY ?p ?sType } """ ;
#    mf:action """PREFIX voidex: <http://ldf.fi/void-ext#>
#        CONSTRUCT { $datasetDescription void:propertyPartition [ void:property ?p ; s:objectTypes [ s:objectClass ?oType ; s:distinctMembers ?x ] ] } WHERE { SELECT (COUNT(?o) AS ?x) ?p ?oType WHERE { ?s ?p ?o . ?o a ?oType . } GROUP BY ?p ?oType } """ ;
