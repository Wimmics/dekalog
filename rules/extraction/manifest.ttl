@prefix mf: <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#> .
@prefix sd: <http://www.w3.org/ns/sparql-service-description#> .
@prefix kgi: <http://ns.inria.fr/kgindex#> .
@prefix earl: <http://www.w3.org/ns/earl#> .
@prefix prov: <http://www.w3.org/ns/prov#> .

<> a mf:Manifest ;
    mf:entries  (
            <endpointDescResource.ttl>
            <datasetDescResource.ttl>
            <graphList.ttl>
            <vocabularyList.ttl>
            <tripleCount.ttl>
            <classCount.ttl>
            <classPopulation.ttl>
            <propertyCount.ttl>
        ) .

<endpointDescResource.ttl> a mf:ManifestEntry ;
    kgi:onSuccess (
        [ mf:action """
                PREFIX dcat: <http://www.w3.org/ns/dcat#>
                PREFIX prov: <http://www.w3.org/ns/prov#>
                PREFIX sd: <http://www.w3.org/ns/sparql-service-description#>
                PREFIX earl: <http://www.w3.org/ns/earl#>
                PREFIX kgi: <http://ns.inria.fr/kgindex#>
                CONSTRUCT {
                    $endpointDescription ?p ?o .
                    $endpointDescription a sd:Service, dcat:DataService , prov:Entity , earl:TestSubject ;
                        sd:endpoint $endpoint .
                    $metadataDescription a prov:Entity , earl:TestSubject ;
                         prov:wasDerivedFrom $endpoint ;
                         kgi:curated $endpointDescription ;
                         kgi:original ?res .
                } WHERE {
                    ?res sd:endpoint $endpoint .
                    ?res ?p ?o .
                }""" ;
            mf:action """PREFIX sd: <http://www.w3.org/ns/sparql-service-description#>
                PREFIX kgi: <http://ns.inria.fr/kgindex#>
                CONSTRUCT {
                   ?s ?p $endpointDescription .
                   $metadataDescription kgi:original ?res .
                } WHERE {
                   ?res sd:endpoint $endpoint .
                   ?s ?p ?res .
                }"""  ]
        <../meta/equivalences.ttl>
    ) .

<datasetDescResource.ttl> a mf:ManifestEntry ;
    kgi:onSuccess (
        [ mf:action """PREFIX void: <http://rdfs.org/ns/void#>
                PREFIX dcat: <http://www.w3.org/ns/dcat#>
                PREFIX prov: <http://www.w3.org/ns/prov#>
                PREFIX sd: <http://www.w3.org/ns/sparql-service-description#>
                PREFIX earl: <http://www.w3.org/ns/earl#>
                PREFIX kgi: <http://ns.inria.fr/kgindex#>
                CONSTRUCT {
                    $datasetDescription ?pp ?o .
                    $metadataDescription a prov:Entity , earl:TestSubject ;
                        prov:wasDerivedFrom $endpoint ;
                        kgi:curated $datasetDescription ;
                        kgi:original ?res .
                }
                WHERE {
                    { ?res a dcat:Dataset }
                    UNION { ?res a void:Dataset }
                    ?res ?p $endpoint .
                    ?res ?pp ?o .
                 }""";
             mf:action """PREFIX void: <http://rdfs.org/ns/void#>
                PREFIX dcat: <http://www.w3.org/ns/dcat#>
                PREFIX prov: <http://www.w3.org/ns/prov#>
                PREFIX sd: <http://www.w3.org/ns/sparql-service-description#>
                PREFIX earl: <http://www.w3.org/ns/earl#>
                PREFIX kgi: <http://ns.inria.fr/kgindex#>
                CONSTRUCT {
                    $metadataDescription a prov:Entity , earl:TestSubject ;
                        prov:wasDerivedFrom $endpoint ;
                        kgi:curated $datasetDescription ;
                        kgi:original ?res .
                    ?s ?pp $datasetDescription .
                }
                WHERE {
                    { ?res a dcat:Dataset }
                    UNION { ?res a void:Dataset }
                    ?res ?p $endpoint .
                    ?s ?pp ?res .
                 }""" ]
            <../meta/equivalences.ttl>
        ) .

<graphList.ttl> a mf:ManifestEntry ;
    kgi:onSuccess (
    [   mf:action """PREFIX void: <http://rdfs.org/ns/void#>
        PREFIX dcat: <http://www.w3.org/ns/dcat#>
        PREFIX prov: <http://www.w3.org/ns/prov#>
        PREFIX sd: <http://www.w3.org/ns/sparql-service-description#>
        PREFIX earl: <http://www.w3.org/ns/earl#>
        PREFIX kgi: <http://ns.inria.fr/kgindex#>
        CONSTRUCT {
            $metadataDescription a prov:Entity , earl:TestSubject ;
                prov:wasDerivedFrom $endpoint ;
                kgi:curated $endpointDescription .
            $endpointDescription sd:availableGraphs $graphList .
            $graphList sd:namedGraph [
                    a sd:NamedGraph ;
                    sd:name ?graph
                ] .
        }
        WHERE {
            SELECT DISTINCT ?graph WHERE {
                GRAPH ?graph { ?s ?p ?o }
            }
        }
        """  ]
    ) ;
    kgi:onFailure (
        <graphListCorese.ttl>
    ) .

<graphListCorese.ttl> a mf:ManifestEntry ;
    kgi:onSuccess (
        [ kgi:endpoint kgi:federation ;
        mf:action """PREFIX kgi: <http://ns.inria.fr/kgindex#>
        PREFIX void: <http://rdfs.org/ns/void#>
        PREFIX sd: <http://www.w3.org/ns/sparql-service-description#>
        CONSTRUCT {
            $endpointDescription sd:availableGraphs $graphList .
            $graphList sd:namedGraph [
                    a sd:NamedGraph ;
                    sd:name ?graph
                ] .
        }
        WHERE {
            SELECT DISTINCT ?graph WHERE {
                SERVICE $endpoint {
                    GRAPH ?graph { ?s ?p ?o . }
                }
                FILTER(STRSTARTS(str(?graph), $namespace))
            }
        }""" ]
    ) .

<vocabularyList.ttl> a mf:ManifestEntry ;
    kgi:onSuccess (
        [ mf:action """PREFIX void: <http://rdfs.org/ns/void#>
            PREFIX prov: <http://www.w3.org/ns/prov#>
            PREFIX earl: <http://www.w3.org/ns/earl#>
            PREFIX kgi: <http://ns.inria.fr/kgindex#>
            CONSTRUCT {
            $metadataDescription a prov:Entity , earl:TestSubject ;
                prov:wasDerivedFrom $endpoint ;
                kgi:curated $datasetDescription .
            $datasetDescription void:vocabulary ?ns .
        }
        WHERE {
            ?s a ?elem .
            BIND( IRI(REPLACE( str(?elem), "(#|/)[^#/]*$", "$1" )) AS ?ns ) .
        }
        """ ]
    [ mf:action """PREFIX void: <http://rdfs.org/ns/void#>
            PREFIX prov: <http://www.w3.org/ns/prov#>
            PREFIX earl: <http://www.w3.org/ns/earl#>
            PREFIX kgi: <http://ns.inria.fr/kgindex#>
            CONSTRUCT {
            $metadataDescription a prov:Entity , earl:TestSubject ;
                prov:wasDerivedFrom $endpoint ;
                kgi:curated $datasetDescription .
            $datasetDescription void:vocabulary ?ns .
        }
        WHERE {
            ?s ?elem ?o .
            BIND( IRI(REPLACE( str(?elem), "(#|/)[^#/]*$", "$1" )) AS ?ns ) .
        }
        """ ]
    ) ;
    kgi:onFailure (
        <vocabularyListCorese.ttl>
    ) .

<vocabularyListCorese.ttl> a mf:ManifestEntry ;
        kgi:onSuccess (
            [ kgi:endpoint kgi:federation ;
                mf:action """PREFIX void: <http://rdfs.org/ns/void#>
            PREFIX prov: <http://www.w3.org/ns/prov#>
            PREFIX earl: <http://www.w3.org/ns/earl#>
            PREFIX kgi: <http://ns.inria.fr/kgindex#>
            CONSTRUCT {
            $metadataDescription a prov:Entity , earl:TestSubject ;
                prov:wasDerivedFrom $endpoint ;
                kgi:curated $datasetDescription .
            $datasetDescription void:vocabulary ?ns .
        }
        WHERE {
            SERVICE $endpoint {
                SELECT DISTINCT ?elem WHERE {
                    ?s a ?elem .
                }
            }
            BIND( IRI(REPLACE( str(?elem), "(#|/)[^#/]*$", "$1" )) AS ?ns ) .
        }
        """ ]
        [ kgi:endpoint kgi:federation ;
            mf:action """PREFIX void: <http://rdfs.org/ns/void#>
            PREFIX prov: <http://www.w3.org/ns/prov#>
            PREFIX earl: <http://www.w3.org/ns/earl#>
            PREFIX kgi: <http://ns.inria.fr/kgindex#>
            CONSTRUCT {
            $metadataDescription a prov:Entity , earl:TestSubject ;
                prov:wasDerivedFrom $endpoint ;
                kgi:curated $datasetDescription .
            $datasetDescription void:vocabulary ?ns .
        }
        WHERE {
            SERVICE $endpoint {
                SELECT DISTINCT ?elem WHERE {
                    ?s ?elem ?o .
                }
            }
            BIND( IRI(REPLACE( str(?elem), "(#|/)[^#/]*$", "$1" )) AS ?ns ) .
        }
        """ ]
    ) .

<classPopulation.ttl> a mf:ManifestEntry ;
    kgi:onSuccess (
        [ mf:action """PREFIX void: <http://rdfs.org/ns/void#>
            PREFIX prov: <http://www.w3.org/ns/prov#>
            PREFIX earl: <http://www.w3.org/ns/earl#>
            PREFIX kgi: <http://ns.inria.fr/kgindex#>
            CONSTRUCT {
                $metadataDescription a prov:Entity , earl:TestSubject ;
                    prov:wasDerivedFrom $endpoint ;
                    kgi:curated $datasetDescription .
                $datasetDescription void:classPartition [ void:class ?class ; void:entities ?count ] . }
            WHERE { SELECT ?class (count(?instance) AS ?count) WHERE { SELECT DISTINCT ?class ?instance $FROM WHERE { ?instance a ?class } } GROUP BY ?class }
        """ ]
    ) .


<classCount.ttl> a mf:ManifestEntry ;
    kgi:onFailure (
        [ mf:action """PREFIX void: <http://rdfs.org/ns/void#>
            DELETE WHERE {
                $datasetDescription void:classes ?classCount .
            }
        """ ]
        [ mf:action """PREFIX void: <http://rdfs.org/ns/void#>
            PREFIX dcat: <http://www.w3.org/ns/dcat#>
            PREFIX prov: <http://www.w3.org/ns/prov#>
            PREFIX sd: <http://www.w3.org/ns/sparql-service-description#>
            PREFIX earl: <http://www.w3.org/ns/earl#>
            PREFIX kgi: <http://ns.inria.fr/kgindex#>
            PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
            PREFIX owl: <http://www.w3.org/2002/07/owl#>
            CONSTRUCT {
                $datasetDescription void:classes ?count .
            }
            WHERE {
                SELECT (count(?class) AS ?count)
                WHERE {
                    SELECT DISTINCT ?class
                    $FROM
                    WHERE {
                        { ?class a owl:Class }
                        UNION { ?class a rdfs:Class }
                        UNION { ?whatever a ?class }
                    }
                }
            }
        """ ]
        ) .

<propertyCount.ttl> a mf:ManifestEntry ;
    kgi:onFailure (
        [ mf:action """PREFIX void: <http://rdfs.org/ns/void#>
            DELETE WHERE {
                $datasetDescription void:properties ?propCount .
            }
        """ ]
        [ mf:action """PREFIX void: <http://rdfs.org/ns/void#>
            PREFIX dcat: <http://www.w3.org/ns/dcat#>
            PREFIX prov: <http://www.w3.org/ns/prov#>
            PREFIX sd: <http://www.w3.org/ns/sparql-service-description#>
            PREFIX earl: <http://www.w3.org/ns/earl#>
            PREFIX kgi: <http://ns.inria.fr/kgindex#>
            PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
            PREFIX owl: <http://www.w3.org/2002/07/owl#>
            CONSTRUCT {
                $datasetDescription void:properties ?count .
            }
            WHERE {
                SELECT (count(?p) AS ?count)
                WHERE {
                    SELECT DISTINCT ?p
                    $FROM
                    WHERE {
                        ?s ?p ?o
                    }
                }
            }
        """ ]
        ) .

<tripleCount.ttl> a mf:ManifestEntry ;
    kgi:onFailure (
        [ mf:action """PREFIX void: <http://rdfs.org/ns/void#>
            DELETE WHERE {
                $datasetDescription void:triples ?propCount .
            }
        """ ]
        [ mf:action """PREFIX void: <http://rdfs.org/ns/void#>
            PREFIX dcat: <http://www.w3.org/ns/dcat#>
            PREFIX prov: <http://www.w3.org/ns/prov#>
            PREFIX sd: <http://www.w3.org/ns/sparql-service-description#>
            PREFIX earl: <http://www.w3.org/ns/earl#>
            PREFIX kgi: <http://ns.inria.fr/kgindex#>
            CONSTRUCT {
                $datasetDescription void:triples ?count .
            }
            WHERE {
                SELECT (count(*) AS ?count) WHERE {
                    SELECT DISTINCT ?s ?p ?o
                    $FROM
                    WHERE {
                       ?s ?p ?o .
                    }
                }
            }
        """ ]
        ) .

# Miscanellous statistics from SPORTAL using a vocabulary created for SPORTAL only
#    mf:action """PREFIX voidex: <http://ldf.fi/void-ext#>
#        CONSTRUCT { $datasetDescription void:propertyPartition [ void:property ?p ; s:subjectTypes [ s:subjectClass ?sType ; s:distinctMembers ?x ] ] } WHERE { SELECT (COUNT(?s) AS ?x) ?p ?sType WHERE { ?s ?p ?o ; a ?sType . } GROUP BY ?p ?sType } """ ;
#    mf:action """PREFIX voidex: <http://ldf.fi/void-ext#>
#        CONSTRUCT { $datasetDescription void:propertyPartition [ void:property ?p ; s:objectTypes [ s:objectClass ?oType ; s:distinctMembers ?x ] ] } WHERE { SELECT (COUNT(?o) AS ?x) ?p ?oType WHERE { ?s ?p ?o . ?o a ?oType . } GROUP BY ?p ?oType } """ ;
