@prefix rdfs:       <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl:        <http://www.w3.org/2002/07/owl#> .
@prefix xsd:        <http://www.w3.org/2001/XMLSchema#> .
@prefix dcat:       <http://www.w3.org/ns/dcat#>.
@prefix foaf:       <http://xmlns.com/foaf/0.1/> .
@prefix prov:       <http://www.w3.org/ns/prov#> .
@prefix schema:		<http://schema.org/> .
@prefix void:       <http://rdfs.org/ns/void#> .
@prefix sd:     	<http://www.w3.org/ns/sparql-service-description#> .
@prefix dce:        <http://purl.org/dc/elements/1.1/>.
@prefix dct:        <http://purl.org/dc/terms/> .
@prefix skos:       <http://www.w3.org/2004/02/skos/core#> .
@prefix pav:        <http://purl.org/pav/> .
@prefix mod:        <https://w3id.org/mod#> .

# Below is a non-exhaustive template for the description of a RDF dataset and its associated endpoint.
# This template tries to use as much of the most common vocabularies as possible to create a basic description.
# The resources linked to this description should also be described in the Dataset when relevant.
# The literals should be either tagged with their languages or typed with a xsd:datatype.
# As much as possible, every URI should have a label or a title.

<dataset-uri>
    a                       dcat:Dataset , void:Dataset , sd:Dataset ;
    dct:title               "Name of the dataset" ;
    dct:description         "Long description of the dataset" ;
    void:sparqlEndpoint     <Url of the SPARQL endpoint> ;
    dct:creator             <Uri of creator(s)> , "Avoid string literals when possible" ;
    dct:issued              "Date time of publication"^^xsd:dateTime ;
    dcat:version            "Version number" ;
    dct:license             <Uri/Url of license> ;
    dcat:keyword            "Keywords" , "describing" , "the" , "content" , "of" , "the" , "dataset" , "strings" , "or" , <URIs> ;
    void:vocabulary         <Uris of vocabularies used in the dataset> ;
	dct:language            "Lang" , "tags" , "used" , "in" , "the" , "literals" , "if" , "any" ;
    rdfs:seeAlso            <Uris of other web resources related to the dataset> ;
    pav:createdOn           "Date time of creation"^^xsd:dateTime ;
    dct:modified            "Date time of the last modification"^^xsd:date ;
    prov:hasPrimarySource   <Uri(s) of the source(s) of the data in the dataset> ;
    dct:conformsTo          <Uri(s) of the ontology(ies) that the dataset conforms to> ;
    mod:sampleQueries       "SPARQL query example returning interesting results in the dataset." ;
    void:exampleResource    <Uri(s) of a sample resource interesting to understand the content of the dataset> ;
    void:uriRegexPattern    "Namespace of the uris of the resources created in the dataset, if any, as a regex pattern" ;
    dcat:service            <endpoint-uri> ;
    dcat:distribution       [
            a                       dcat:Distribution ;
            dct:title               "This dataset's endpoint" ;
            dcat:accessURL          <Url of the SPARQL endpoint> ;
            dcat:mediaType          "application/sparql-query"
        ] ;
    dcat:distribution       [
            a                       dcat:Distribution ;
            dct:title               "This dataset's archive title" ;
            dcat:downloadUrl        <Url where the dataset can be downloaded as a file, if any> ;
            dct:format              "Format of the dump file" ;
            dcat:version            "Version number of the file" ;
            pav:createdOn           "Date time of creation of the file"^^xsd:dateTime
    ] ;
    sd:namedGraph           <Named graphs uris> .

<Named graphs uris>
    a                       sd:Graph, sd:NamedGraph ;
    sd:name                 <URI of the named graph> .

<endpoint-uri>
    a                       sd:Service, dcat:DataService ;
    dcat:servesDataset      <dataset-uri> ;
    sd:endpoint             <Url of the SPARQL endpoint> ;
    sd:availableGraphs      <dataset-uri> .


# The given template can be expanded using the DCAT, PROV-O, Schema, VoID, SPARQL-SD, DCTERMS, or any other vocabulary.
# As an example, here are some elements that can be use to expand the dataset description:
#
#<dataset-uri>
#    schema:isBasedOn    <Uri of the source of the dataset, if relevant> ;
#    prov:wasDerivedFrom <Uri of the source of the dataset, if relevant> ;
#    prov:wasGeneratedBy <Uri of the process at the origin of the dataset> ;
#
#    void:triples        "Number of triples in the dataset"^^xsd:integer ;
#    void:classes        "Number of classes in the dataset"^^xsd:integer ;
#    void:properties     "Number of properties in the dataset"^^xsd:integer ;
#
#<Named graphs uris>
#    void:triples        "Number of triples in the graph"^^xsd:integer ;
#    void:classes        "Number of classes in the graph"^^xsd:integer ;
#    void:properties     "Number of properties in the graph"^^xsd:integer .
#
# Each graph can be described using the DCTerms, Prov-O, VoID, PAV, Schema vocabularies and others.


# Repeated information as objects of different properties will facilitate the access to the description for future users and should be kept.
# Feel free to duplicate or precise information using the following properties
#<dataset-uri> a void:Dataset , schema:Dataset , prov:Entity ;
#    schema:name             "Name of the dataset" ;
#    skos:prefLabel          "Name of the dataset" ;
#    rdfs:label              "Name of the dataset" ;
#    schema:description      "Long description of the dataset" ;
#    rdfs:comment            "Long description of the dataset" ;
#    foaf:homepage           "Url of a web page describing this dataset, if any" ;
#    dcat:landingPage        "Url of a web page describing this dataset, if any" ;
#    dcat:contactPoint       "Contact information for this dataset, preferably an email adress or a VCard" ;
#    dct:creator             <Uri of creator(s)> , "Avoid string literals when possible" ;
#    schema:author           <Uri of creator(s)> , "Avoid string literals when possible" ;
#    dct:publisher           <Uri of creator(s)> , "Avoid string literals when possible" ;
#    prov:wasAttributedTo    <Uri of creator(s)> , "Avoid string literals when possible" ;
#    schema:publisher        <Uri of creator(s)> , <publisher(s)> , "Avoid string literals when possible" ;
#    schema:editor           <Uri of creator(s)> , <editor(s)> , "Avoid string literals when possible" ;
#    dct:contributor         <Uri of contributor(s)> , "Avoid string literals when possible" ;
#    dct:license             <Uri/Url of license> ;
#    schema:license          <Uri/Url of license> ;
#    owl:versionInfo         "Version number" ;
#    schema:version          "Version number" ;
#	 dct:language            "Lang" , "tags" , "used" , "in" , "the" , "literals" , "if" , "any" ;
#    schema:inLanguage       "Lang" , "tags" , "used" , "in" , "the" , "literals" , "if" , "any" ;
#    prov:wasGeneratedAtTime "Date time of creation"^^xsd:date ;
#    schema:datePublished    "Date time of creation/publication"^^xsd:date ;
#    dct:modified            "Date time of the last modification"^^xsd:date ;
#    dct:subject             "Keywords" , "describing" , "the" , "content" , "of" , "the" , "dataset" , "strings" , "or" , <URIs> ;
#    dcat:keyword            "Keywords" , "describing" , "the" , "content" , "of" , "the" , "dataset" , "strings" , "or" , <URIs> ;
#    schema:keywords         "Keywords" , "describing" , "the" , "content" , "of" , "the" , "dataset" , "strings" , "or" , <URIs> ;
#    void:uriSpace           "Namespace of the uris of the resources created in the dataset, if any" ;
#    void:dataDump           <Url where the dataset can be downloaded as a file, if any> .
#
#<endpoint-uri>
#    dct:creator             <Uri of creator(s) of the endpoint> , "Avoid string literals when possible" ;
#    prov:wasAttributedTo    <Uri of creator(s) of the endpoint> , "Avoid string literals when possible" .
